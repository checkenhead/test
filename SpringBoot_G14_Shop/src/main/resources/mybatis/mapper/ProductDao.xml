<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tjoeun.g14.dao.IProductDao">

	<!-- <select id="getNewList" resultType="com.tjoeun.g14.dto.ProductVO">
		select * from new_pro_view
	</select>
	
	<select id="getBestList" resultType="com.tjoeun.g14.dto.ProductVO">
		select * from best_pro_view
	</select> -->
	
	<resultMap id="productMap1" type="java.util.HashMap"></resultMap>
	<resultMap id="productMap2" type="java.util.HashMap"></resultMap>
	
	<select id="getBestNewList" statementType="CALLABLE" parameterType="java.util.HashMap">
		{
			call getBestNewList(
			#{ref_cursor1, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=productMap1},
			#{ref_cursor2, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=productMap2})
		}
	</select>
	<!--
	레코드1 > pseq:1, name:'여성용 힐', kind:1, price2:20000
	...
	
	productMap.put("PSEQ", 1);
	productMap.put("NAME", "여성용 힐");
	productMap.put("KIND", 1);
	productMap.put("PRICE2", 20000);
	...
	레코드가 여러개면 productMap의 ArrayList형태로 리턴됩니다.
	최종 ref_cursor1과 2로 전달되는 자료형은 ArrayList<HashMap<String, Object>>
	-->
	
	<select id="getKindList" statementType="CALLABLE" parameterType="java.util.HashMap">
		{
			call getKindList(
			#{kind},
			#{ref_cursor, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=productMap1})
		}
	</select>
	
	<select id="getProductDetail" statementType="CALLABLE" parameterType="java.util.HashMap">
		{
			call getProductDetail(
			#{pseq},
			#{ref_cursor, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=productMap1})
		}
	</select>
	
</mapper>